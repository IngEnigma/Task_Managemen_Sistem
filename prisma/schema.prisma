generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  MEMBER
}

enum ProjectStatus {
  ACTIVE
  PAUSED
  COMPLETED
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  BLOCKED
}

model User {
  id            Int              @id @default(autoincrement())
  name          String?
  email         String           @unique
  password      String
  role          UserRole         @default(MEMBER)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @default(now())
  createdProjects Project[]      @relation("CreatedProjects")
  assignedTasks Task[]           @relation("AssignedTasks")
  createdTasks  Task[]           @relation("TaskCreatedBy")
  notifications Notification[]
  projectMembers ProjectMember[]
}

model Project {
  id            Int              @id @default(autoincrement())
  name          String
  description   String?
  status        ProjectStatus    @default(ACTIVE)
  createdById   Int
  createdBy     User             @relation("CreatedProjects", fields: [createdById], references: [id])
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @default(now())
  members       ProjectMember[]
  tasks         Task[]
}

model ProjectMember {
  id        Int        @id @default(autoincrement())
  projectId Int
  userId    Int
  role      UserRole   @default(MEMBER)
  joinedAt  DateTime   @default(now())

  project   Project    @relation(fields: [projectId], references: [id])
  user      User       @relation(fields: [userId], references: [id])
  
  @@unique([projectId, userId])
}

model Task {
  id           Int         @id @default(autoincrement())
  projectId    Int
  title        String
  description  String?
  status       TaskStatus  @default(PENDING)
  dueDate      DateTime?
  assignedToId Int? 
  createdById  Int
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())

  project      Project     @relation(fields: [projectId], references: [id])
  assignedTo   User?       @relation("AssignedTasks", fields: [assignedToId], references: [id])
  createdBy    User        @relation("TaskCreatedBy", fields: [createdById], references: [id])
}

model Notification {
  id        Int       @id @default(autoincrement())
  userId    Int
  message   String
  read      Boolean   @default(false)
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
}